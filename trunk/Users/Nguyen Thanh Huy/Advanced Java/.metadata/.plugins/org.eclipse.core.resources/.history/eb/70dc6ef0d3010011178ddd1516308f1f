package notepad;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.ImageProducer;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.text.MessageFormat;
import java.util.List;
import java.util.Scanner;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.TreeMap;

import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;

public class MySimpleNotepad extends JFrame implements ActionListener {
	private static final long serialVersionUID = 1l;
	private JMenuBar menubar;
	private JMenu mFile, mEdit, mAbout, mTool;
	private JMenuItem itemNew, itemOpen, itemSave, itemSaveAs, itemPageSetUp,
			itemPrint, itemExit;
	private JMenuItem itemCopy, itemCut, itemPaste, itemDelete, itemAbout;
	private JTextPane tpContent;
	private JMenuItem itemWordCount, itemCharCount, itemThongKe1, itemThongKe2;
	private JLabel lblStatus;
	private String selFile = "";

	public MySimpleNotepad() {
		super("tungit07@gmail.com");
		setSize(600, 600);
		setBounds(350, 100, 700, 500);
		this.setIconImage(new ImageIcon("tungit07.ico").getImage());
		createGUI();
		createMenu();
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setVisible(true);
	}

	private void createMenu() {
		menubar = new JMenuBar();
		this.setJMenuBar(menubar);
		menubar.add(mFile = new JMenu("File"));
		menubar.add(mEdit = new JMenu("Edit"));
		menubar.add(mTool = new JMenu("Tool"));
		menubar.add(mAbout = new JMenu("About"));
		// Menu File--------------------------------------------------------
		// Menu New
		mFile.add(itemNew = new JMenuItem("New", 'N'));
		itemNew.setAccelerator(KeyStroke.getKeyStroke('N',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Gach ngang
		mFile.addSeparator();
		// Menu Open
		mFile.add(itemOpen = new JMenuItem("Open", 'O'));
		itemOpen.setAccelerator(KeyStroke.getKeyStroke('O',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu Save
		mFile.add(itemSave = new JMenuItem("Save", 'S'));
		itemSave.setAccelerator(KeyStroke.getKeyStroke('S',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu Sav As
		mFile.add(itemSaveAs = new JMenuItem("Save As", 'A'));
		itemSaveAs.addActionListener(this);
		// Menu Page Setup
		mFile.add(itemPageSetUp = new JMenuItem("Page Setup", 'e'));
		itemPageSetUp.addActionListener(this);
		// Menu Print
		mFile.add(itemPrint = new JMenuItem("Print", 'P'));
		itemPrint.setAccelerator(KeyStroke.getKeyStroke('P',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Gach ngang
		mFile.addSeparator();
		// Menu Exit
		mFile.add(itemExit = new JMenuItem("Exit", 'X'));
		itemExit.setAccelerator(KeyStroke.getKeyStroke('X',
				java.awt.event.InputEvent.ALT_DOWN_MASK));
		// --------------------------------------------------------

		// Menu Edit-----------------------------------------------
		// Menu Copy
		mEdit.add(itemCopy = new JMenuItem("Copy", 'C'));
		itemCopy.setAccelerator(KeyStroke.getKeyStroke('C',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu Cut
		mEdit.add(itemCut = new JMenuItem("Cut", 'u'));
		itemCut.setAccelerator(KeyStroke.getKeyStroke('X',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu Paste
		mEdit.add(itemPaste = new JMenuItem("Paste", 'P'));
		itemPaste.setAccelerator(KeyStroke.getKeyStroke('V',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu Delete
		mEdit.add(itemDelete = new JMenuItem("Delete", 'D'));
		itemDelete.addActionListener(this);
		// ----------------------------------------------------------
		// Menu About
		mAbout.add(itemAbout = new JMenuItem("About", 'A'));
		// Menu Action-----------------------------------------------
		// Menu WordCount
		mTool.add(itemWordCount = new JMenuItem("Word count", 'W'));
		itemWordCount.setAccelerator(KeyStroke.getKeyStroke('W',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu CharCount
		mTool.add(itemCharCount = new JMenuItem("Char count", 'H'));
		itemCut.setAccelerator(KeyStroke.getKeyStroke('H',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu ThongKe1
		mTool.add(itemThongKe1 = new JMenuItem("Statistic 1 char", '1'));
		itemThongKe1.setAccelerator(KeyStroke.getKeyStroke('1',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// Menu Thongke 2
		mTool.add(itemThongKe2 = new JMenuItem("Statistic 2 char", '2'));
		itemThongKe2.setAccelerator(KeyStroke.getKeyStroke('2',
				java.awt.event.InputEvent.CTRL_DOWN_MASK));
		// ----------------------------------------------------------

		itemAbout.addActionListener(this);
		itemCopy.addActionListener(this);
		itemCut.addActionListener(this);
		itemExit.addActionListener(this);
		itemNew.addActionListener(this);
		itemOpen.addActionListener(this);
		itemPaste.addActionListener(this);
		itemPrint.addActionListener(this);
		itemSave.addActionListener(this);
		itemWordCount.addActionListener(this);
		itemCharCount.addActionListener(this);
		itemThongKe1.addActionListener(this);
		itemThongKe2.addActionListener(this);
	}

	private void createGUI() {
		tpContent = new JTextPane();
		tpContent
				.setText("-----------------------tungit07@gmail.com--------------------");

		this.add(new JScrollPane(tpContent), BorderLayout.CENTER);
		lblStatus = new JLabel("Ready");
		this.add(lblStatus, BorderLayout.SOUTH);
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
		Object o = e.getSource();
		if (o.equals(itemExit)) {
			System.exit(1);
		} else if (o.equals(itemNew)) {
			tpContent.setText("");
		} else if (o.equals(itemOpen)) {
			OpenFunction();
		} else if (o.equals(itemSave)) {
			try {
				SaveFunction();
			} catch (FileNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		} else if (o.equals(itemSaveAs)) {
			try {
				SaveAsFunction();
			} catch (FileNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		} else if (o.equals(itemPageSetUp)) {
			PageSetUpFunction();
		} else if (o.equals(itemPrint)) {
			PrintFunction();
		} else if (o.equals(itemCopy)) {
			tpContent.copy();
		} else if (o.equals(itemCut)) {
			tpContent.cut();
		} else if (o.equals(itemDelete)) {
			tpContent.cut();
		} else if (o.equals(itemNew)) {
			tpContent.paste();
		} else if (o.equals(itemAbout)) {
			AboutFunction();
		} else if (o.equals(itemWordCount)) {
			WordCountFunction();
		} else if (o.equals(itemCharCount)) {
			CharCountFunction();
		} else if (o.equals(itemThongKe1)) {
			ThongKe1Function();
		} else if (o.equals(itemThongKe2)) {
			ThongKe2Function();
		}
	}

	private void ThongKe2Function() {
		String s = tpContent.getText();
		s = s.toLowerCase();
		TreeMap<String, Integer> map = new TreeMap<String, Integer>();
		String[] arrString = { "th", "ng", "gh", "ch", "tr", "ph", "qu", "ngh" };
		for (int i = 0; i < arrString.length; i++) {
			String a = arrString[i];
			map.put(a + "", count(s, a + ""));
		}

		JDialog dlg = new JDialog(this);
		dlg.setLayout(new GridLayout(10, 10));
		dlg.setTitle("S 1 char");

		Set<String> set = map.keySet();
		String result = "Char        Total";
		JLabel l1 = new JLabel(result, JLabel.CENTER);
		dlg.add(l1);
		for (String str : set) {
			if (map.get(str) > 0) {
				result = str + "         " + map.get(str) + " ";
				JLabel l = new JLabel(result, JLabel.CENTER);
				dlg.add(l);
			}

		}
		dlg.setSize(100, 30);
		dlg.setBounds(400, 200, 400, 200);
		dlg.setVisible(true);

	}

	private void ThongKe1Function() {
		String s = tpContent.getText();
		s = s.toLowerCase();
		TreeMap<String, Integer> map = new TreeMap<String, Integer>();
		// 32 - 126
		for (int i = 32; i < 10000; i++) {
			char a = (char) i;
			String s1 = a + "";
			s1 = s1.toLowerCase();
			if (!map.containsKey(s1))
				map.put(s1, count(s, s1));
		}
		char[] arrChar = { 'Äƒ', 'áº¯', 'áº·', 'Ã¢', 'áº¥', 'áº§', 'áº­', 'áº©', 'áº«', 'Ä‘',
				'Ã©', 'Ã¨', 'áº»', 'áº½', 'áº¹', 'Ãª', 'áº¿', 'á»�', 'á»ƒ', 'á»…', 'á»‡', 'Ã³',
				'Ã²', 'á»�', 'Ãµ', 'á»�', 'Ã´', 'á»‘', 'á»“', 'á»•', 'á»—', 'á»™', 'Æ¡', 'á»›',
				'á»�', 'á»Ÿ', 'á»¡', 'á»£', 'Æ°', 'á»©', 'á»«', 'á»­', 'á»¯', 'á»±', 'u', 'Ãº',
				'Ã¹', 'á»§', 'Å©', 'á»¥', 'Ã­', 'Ã¬', 'á»‰', 'Ä©', 'á»‹' };
		for (int i = 0; i < arrChar.length; i++) {
			char a = arrChar[i];
			map.put(a + "", count(s, a + ""));
		}

		JDialog dlg = new JDialog(this);
		dlg.setLayout(new GridLayout(10, 10));
		dlg.setTitle("S 1 char");

		Set<String> set = map.keySet();
		String result = "Char        Total";
		JLabel l1 = new JLabel(result, JLabel.CENTER);
		dlg.add(l1);
		for (String str : set) {
			if (map.get(str) > 0) {
				result = str + "         " + map.get(str) + " ";
				JLabel l = new JLabel(result, JLabel.CENTER);
				dlg.add(l);
			}

		}
		dlg.setSize(100, 30);
		dlg.setBounds(400, 200, 400, 200);
		dlg.setVisible(true);
	}

	private void CharCountFunction() {
		String s = tpContent.getText();
		s = s.toLowerCase();
		// Hien thi Dialog
		JDialog dlg = new JDialog(this);
		dlg.setLayout(new GridLayout(10, 10));
		dlg.setTitle("CharCount");
		while (s.indexOf(" ") != -1) {
			s = s.substring(0, s.indexOf(" "))
					+ s.substring(s.indexOf(" ") + 1);
			System.out.println(s);
		}
		JLabel lt1 = new JLabel("Total char: " + s.length(), JLabel.CENTER);
		JLabel lt2 = new JLabel("tungit07@gmail.com", JLabel.CENTER);
		dlg.add(lt1);
		dlg.add(lt2);
		dlg.setSize(100, 30);
		dlg.setBounds(400, 200, 400, 200);
		dlg.setVisible(true);

	}

	private int count(String s, String token) {
		int count = 0;
		while (s.indexOf(token) != -1) {
			count++;
			s = s.substring(s.indexOf(token) + 1);
		}
		return count;
	}

	private void WordCountFunction() {
		String s = tpContent.getText();
		s = s.toLowerCase();
		StringTokenizer stk = new StringTokenizer(s);
		// Hien thi Dialog
		JDialog dlg = new JDialog(this);
		dlg.setLayout(new GridLayout(10, 10));
		dlg.setTitle("WordCount");
		JLabel lt1 = new JLabel("Total word: " + stk.countTokens(),
				JLabel.CENTER);
		JLabel lt2 = new JLabel("tungit07@gmail.com", JLabel.CENTER);
		dlg.add(lt1);
		dlg.add(lt2);
		dlg.setSize(100, 30);
		dlg.setBounds(400, 200, 400, 200);
		dlg.setVisible(true);
	}

	private void PageSetUpFunction() {
		try {
			MessageFormat header = new MessageFormat("tungit07-NotePad");
			MessageFormat footer = new MessageFormat(
					"Le Nhat Tung - tungit07gmail.com");
			tpContent.print(header, footer, true, null, null, false);
		} catch (Exception e) {
			System.out.println("Khong the in duoc roi");
		}
	}

	private void AboutFunction() {
		JDialog dlg = new JDialog(this);
		dlg.setLayout(new GridLayout(10, 10));
		dlg.setTitle("About tungit07-NotePad");

		final String url = "http://vn.360plus.yahoo.com/tung1171989/";
		JLabel lt = new JLabel("tungit07-NotePad", JLabel.CENTER);
		JLabel au = new JLabel("Le Nhat Tung - tungit07@gmail.com",
				JLabel.CENTER);
		dlg.add(lt);
		dlg.add(au);
		JLabel ll = new JLabel(url, JLabel.CENTER);
		ll.setCursor(new Cursor(Cursor.HAND_CURSOR));
		ll.setForeground(Color.darkGray);
		dlg.add(ll);
		ll.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent e) {

				String commands = "cmd /c start " + url;

				try {

					Runtime rt = Runtime.getRuntime();

					rt.exec(commands);

				} catch (Exception ioe) {

					ioe.printStackTrace();

				}

			}
		});
		dlg.setSize(100, 30);
		dlg.setBounds(400, 200, 400, 200);
		dlg.setVisible(true);

	}

	private void PrintFunction() {
		try {
			MessageFormat header = new MessageFormat("tungit07-NotePad");
			MessageFormat footer = new MessageFormat(
					"Le Nhat Tung - tungit07gmail.com");
			tpContent.print(header, footer, true, null, null, true);
		} catch (Exception e) {
			System.out.println("Khong the in duoc roi");
		}
	}

	private void SaveFunction() throws FileNotFoundException {
		JFileChooser fc = new JFileChooser();
		if (selFile.equals("")) {
			if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
				try {
					selFile = fc.getSelectedFile().getAbsolutePath();
					lblStatus.setText("Saved: " + selFile);
					PrintWriter out = new PrintWriter(new FileOutputStream(
							selFile), true);
					out.print(tpContent.getText());
					out.close();
				} catch (Exception e) {
					System.out.println("Khong luu duoc file");
				}

			}
		} else {
			try {
				lblStatus.setText("Saved: " + selFile);
				PrintWriter out = new PrintWriter(
						new FileOutputStream(selFile), true);
				out.print(tpContent.getText());
				out.close();
			} catch (Exception e) {
				System.out.println("Khong luu duoc file");
			}
		}
	}

	private void SaveAsFunction() throws FileNotFoundException {
		JFileChooser fc = new JFileChooser();
		if (fc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
			try {
				selFile = fc.getSelectedFile().getAbsolutePath();
				lblStatus.setText("Saved: " + selFile);
				PrintWriter out = new PrintWriter(
						new FileOutputStream(selFile), true);
				out.print(tpContent.getText());
				out.close();
			} catch (Exception e) {
				System.out.println("Khong luu duoc file");
			}

		}
	}

	private void OpenFunction() {
		JFileChooser fc = new JFileChooser();
		if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
			try {
				selFile = fc.getSelectedFile().getAbsolutePath();
				Scanner sc = new Scanner(new FileInputStream(selFile), "UTF-8");
				lblStatus.setText("Opened: " + selFile);
				String line = "";
				while (sc.hasNextLine()) {
					line += sc.nextLine() + "\n";
				}
				tpContent.setText(line);
				sc.close();
			} catch (Exception e) {
				System.out.println("Khong the mo duoc file nay dau");
			}
		}

	}

	private void FindFunction() {
		try {
			int find = 12;
			tpContent.findComponentAt(0, find);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}

	public static void main(String[] args) throws ClassNotFoundException,
			InstantiationException, IllegalAccessException,
			UnsupportedLookAndFeelException {
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		new MySimpleNotepad();
	}

}
